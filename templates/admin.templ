package templates

import(
"fmt"
"go-store/types"
"time"
)


templ Admin(first_name string, security int, customers[] types.Customer, orders[] types.Order, numOrders int, products[] types.Product) {

<head>
    <title>Admin</title>
    <link rel="icon" type="image/x-icon" href="assets/images/page_icon.ico">
    <link rel="stylesheet" href="assets/styles/styles.css">
</head>

<body>
    @header(first_name, security)

    <div id="queries">
        @AllCustomers(customers)
        @AllOrders(orders, numOrders)
        @AllProducts(products)
    </div>
    @footer()
</body>
}



templ AllCustomers(customers []types.Customer){
<h1>Customers</h1>
<table>
    <thead>
        <th>First</th>
        <th>Last</th>
        <th>Email</th>
    </thead>
    <tbody>
        for _, customer := range customers {
        <tr>
            <td>{ customer.First }</td>
            <td>{ customer.Last }</td>
            <td><a> { customer.Email } </a></td>
        </tr>
        }
    </tbody>

</table>
}

templ AllOrders(orders []types.Order, numOrders int){
<h1>Orders</h1>
    if numOrders > 0 {
    <table>
        <thead>
            <th>Product Name</th>
            <th>Customer Name</th>
            <th>Quantity</th>
            <th>Price</th>
            <th>Tax</th>
            <th>Total (with donation round up if applicable)</th>
            <th>Timestamp</th>
        </thead>
        <tbody>
            for _, order := range orders {
            <tr>
                <td>{ fmt.Sprintf("%s",order.Product_Name)}</td>
                <td>{ fmt.Sprintf("%s",order.Customer_Name) }</td>
                <td> { fmt.Sprintf("%d",order.Quantity) }</td>
                <td>{ fmt.Sprintf("$%.2f",order.Price) }</td>
                <td>{ fmt.Sprintf("%.2f%%",order.Tax) }</td>
                <td> { fmt.Sprintf("$%.2f",order.Donation) }</td>
                <td> { fmt.Sprintf("%s", time.UnixMilli(int64(order.Timestamp)).String()) }</td>
            </tr>
            }
        </tbody>

    </table>
    } else {
        <em>No orders yet...</em>
    }
}
templ AllProducts(products []types.Product){
<h1>Products</h1>
<table>
    <thead>
        <th>Name</th>
        <th>Product</th>
        <th>Price</th>
        <th>InStock</th>
    </thead>
    <tbody>
        for _, product := range products {
        <tr>
            <td>{ product.Name }</td>
            <td><img src={ product.Image }></td>
            <td>${ fmt.Sprintf("%.2f",product.Price) }</td>
            <td>{ fmt.Sprintf("%d",product.Instock) }</td>
        </tr>
        }
    </tbody>

</table>
}