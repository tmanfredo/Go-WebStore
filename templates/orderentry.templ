package templates

import (
"fmt"
"go-store/types"
"time"
)

templ OrderEntry(products[] types.Product) {
 <div id="store_container">
	<form id="form">
	<input type="hidden" name="timestamp" value={ fmt.Sprintf("%d", time.Now().Unix()) }/>

		<fieldset id="info" class="required">
			<legend>Personal Info</legend>

			<label for="firstName">First Name</label>
			<input type="text" pattern="[A-Za-z' ]+" title="Input only letters, spaces, or '" name="first" required><br>
			<label for="lastName">Last Name</label>
			<input type="text" pattern="[A-Za-z' ]+" title="Input only letters, spaces, or '" name="last" required><br>
			<label for="email">Email</label>
			<input type="email" name="email" required><br>
		</fieldset>
		<fieldset class="required" id="product">
			<legend>Product Info</legend>
			<label for="product">
				<select name="product" id="productSelection" required>
					<option value="" style="font-weight:bold" disabled selected>Choose a Product</option>
					for _, product := range products {
					<option value={ product.Name } data-image={ product.Image } data-stock={ fmt.Sprintf("%d",product.Instock) }>
						{ fmt.Sprintf("%s: $%.2f", product.Name, product.Price) }
					</option>
					}

				</select><br>
			</label>

			<label for="available">Available </label>
			<input class="quantity" id="available" type="number" name="available" readonly><br>
			<label for="quantity">Quantity </label>
			<input class="quantity" id="quantity" type="number" placeholder="1" min="1" max="100" name="quantity" required><br>

		</fieldset>
		<input id="purchase" type="submit" value="Purchase">
        <input id="clear" type="reset" value="Clear Fields">
	</form>
        
</div>
}