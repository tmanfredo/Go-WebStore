package templates

import (
"fmt"
"go-store/types"
)

templ Products(products[] types.Product) {

<!DOCTYPE html>
<html>

<head>
    <title>GameHalt - Order Entry</title>
    <link rel="stylesheet" href="assets/styles/stylesProducts.css">
    <link rel="icon" type="image/x-icon" href="assets/images/page_icon.ico">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
</head>

<body>
    @header()

    <div id="product_container">

        <div id="products">
            @ProductTable(products)
        </div>
        <aside id="aside">
            <p id="alert" style="color: red"></p>
            <form id="form">
                <fieldset id="formBody">
                    <legend>Game Information</legend>


                    <label class="required" for="name">Game Name</label>
                    <input id="name" type="text" pattern="[A-Za-z' ]+" title="Input only letters, spaces, or '"
                        name="name" required><br>

                    <label class="required" for="image">Image Path</label>
                    <input id="image" type="text" pattern="[A-Za-z0-9./- ]+"
                        title="Enter a path that is valid (letters, numbers, hyphens, and other path symbols)"
                        name="image" required><br>

                    <label for="quantity">Quantity </label>
                    <input id="quantity" type="number" placeholder="1" min="0" max="100" name="quantity"><br>

                    <label for="price">Price</label>
                    <input id="price" name="price" type="number" min="0" step="0.01" placeholder="0.00"><br>

                    <label for="inactive">Inactive?</label>
                    <input id="inactive" name="inactive" type="checkbox"><br>
                </fieldset>

                <input id="create" type="button" value="Add Game">
                <input id="update" type="button" value="Update">
                <input id="delete" type="button" value="Delete">

            </form><br>
            <em>If updating/deleting a game, click on the table entry!<br> The highlighted row will be
                modified/deleted!<br>Games with no orders can be deleted!</em>
        </aside>
    </div>

    @footer()

    <script>
        $(document).ready(function () {
            var productId = -1;
            var tableClicked = false;
            setTimeout(highlight_row, 0);

            $("#create").click(function (e) {
                if (!checkRequired($("#name").val(), $("#image").val())) {
                    return;
                }
                else {
                    let xhttp = new XMLHttpRequest();
                    let productTable = document.getElementById("products");
                    xhttp.onreadystatechange = function () {
                        if (this.readyState == 4 && this.status == 200) {
                            productTable.innerHTML = this.responseText;
                            setTimeout(highlight_row, 0);
                        }

                    };
                    var inactive;
                    if ($('#inactive').prop('checked')) inactive = "1";
                    else inactive = "0";
                    xhttp.open("POST", "product_change?crud=create&name=" + $("#name").val() + "&image=" + $("#image").val() + "&quantity=" +
                        $("#quantity").val() + "&price=" + $("#price").val() + "&inactive=" + inactive, true);
                    xhttp.send();
                    $('#form')[0].reset();
                }
            })

            $("#update").click(function (e) {

                if (!checkRequired($("#name").val(), $("#image").val())) {
                    return;
                }
                else if (!tableClicked) {
                    alert("Products can only be updated through clicking a table's product first!")
                }
                else {
                    let xhttp = new XMLHttpRequest();
                    let productTable = document.getElementById("products");
                    xhttp.onreadystatechange = function () {
                        if (this.readyState == 4 && this.status == 200) {
                            productTable.innerHTML = this.responseText;
                            setTimeout(highlight_row, 0);
                        }

                    };
                    var inactive;
                    if ($('#inactive').prop('checked')) inactive = "1";
                    else inactive = "0";
                    xhttp.open("POST", "product_change?crud=update&id=" + productId + "&name=" + $("#name").val() + "&image=" + $("#image").val() + "&quantity=" +
                        $("#quantity").val() + "&price=" + $("#price").val() + "&inactive=" + inactive, true);
                    xhttp.send();
                    $('#form')[0].reset();
                }
            })

            $("#delete").click(function (e) {
                let xhttp = new XMLHttpRequest();
                xhttp.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        if (this.responseText !== "") {
                            alert("You cannot delete this product as it has active orders!\nMaking it inactive may ensure this issue does not come up again!")
                            setTimeout(highlight_row, 0);
                            return;
                        }

                        if (!checkRequired($("#name").val(), $("#image").val())) {
                            return;
                        }
                        else if (!tableClicked) {
                            alert("Products can only be deleted through clicking a table's product first!");
                            return;
                        } else if (confirm("Are you sure you want to delete this product?")) {
                            let xhttp2 = new XMLHttpRequest();
                            let productTable = document.getElementById("products");
                            xhttp2.onreadystatechange = function () {
                                if (this.readyState == 4 && this.status == 200) {
                                    productTable.innerHTML = this.responseText;
                                    setTimeout(highlight_row, 0);
                                }
                            };
                            xhttp2.open("POST", "product_change?crud=delete&id=" + productId, true);
                            xhttp2.send();
                            $('#form')[0].reset();
                        }
                    }
                };
                xhttp.open("POST", "product_change?crud=deleteRequest&id=" + productId, true);
                xhttp.send();
            });


            function checkRequired(name, image) {
                let alertMessage = "";
                if (image == "") {
                    alertMessage += "Game Image should not be blank!<br>";
                    document.getElementById("image").focus();
                }
                if (name == "") {
                    alertMessage += "Game Name should not be blank!<br>";
                    document.getElementById("name").focus();
                }

                if (alertMessage !== "") {
                    document.getElementById("alert").innerHTML = alertMessage;
                    return false;
                } else {
                    document.getElementById("alert").innerHTML = "";
                    return true;
                }
            }

            function highlight_row() {
                var table = document.getElementById('product_table');
                var cells = table.getElementsByTagName('td');
                tableClicked = false;
                for (var i = 0; i < cells.length; i++) {
                    // Take each cell
                    var cell = cells[i];
                    // do something on onclick event for cell
                    cell.onclick = function () {
                        tableClicked = true;
                        // Get the row id where the cell exists
                        var rowId = this.parentNode.rowIndex;

                        var rowsNotSelected = table.getElementsByTagName('tr');
                        for (var row = 0; row < rowsNotSelected.length; row++) {
                            rowsNotSelected[row].style.backgroundColor = "";
                            rowsNotSelected[row].classList.remove('selected');
                        }
                        var rowSelected = table.getElementsByTagName('tr')[rowId];
                        rowSelected.style.backgroundColor = "yellow";
                        rowSelected.className += " selected";

                        document.getElementById("name").value = rowSelected.cells[0].innerHTML;
                        document.getElementById("image").value = rowSelected.cells[1].innerHTML;
                        document.getElementById("quantity").value = rowSelected.cells[2].innerHTML;
                        document.getElementById("price").value = parseFloat(rowSelected.cells[3].innerHTML.replace('$', ''));
                        if (rowSelected.cells[4].innerHTML == "Yes") document.getElementById("inactive").checked = true;
                        else document.getElementById("inactive").checked = false;
                        productId = rowSelected.cells[0].getAttribute("data-id");
                    }
                }
            }
        })
    </script>
</body>

</html>
}

templ ProductTable(products[] types.Product) {
<h1>Games</h1>
<table id="product_table">
    <thead>
        <th>Game</th>
        <th>Product Image</th>
        <th>Quantity</th>
        <th>Price</th>
        <th>Inactive</th>
    </thead>
    <tbody>
        for _, product := range products {
        <tr>
            <td data-id={ fmt.Sprintf("%d",product.Id) }>{ product.Name }</td>
            <td>{ product.Image }</td>
            <td>{ fmt.Sprintf("%d",product.Instock) }</td>
            <td>${ fmt.Sprintf("%.2f",product.Price) }</td>
            if product.Inactive {
            <td>Yes</td>
            } else {
            <td>No</td>
            }
        </tr>
        }
    </tbody>

</table>
}